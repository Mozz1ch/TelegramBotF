from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackContext
# –°—á–µ—Ç –∏–≥—Ä—ã
score = {"team1": 0, "team2": 0}

async def start(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [
            KeyboardButton("‚ûï –ö–æ–º–∞–Ω–¥–∞ 1"),
            KeyboardButton("‚ûï –ö–æ–º–∞–Ω–¥–∞ 2"),
        ],
        [KeyboardButton("üèÜ –°—á–µ—Ç")],
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤ –≤ –≤–æ–ª–µ–π–±–æ–ª–µ.", reply_markup=reply_markup)

async def handle_button(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()
    data = query.data
    if data == 'team1':
        await team1_point(update, context)
    elif data == 'team2':
        await team2_point(update, context)
    elif data == 'score':
        await get_score(update, context)

async def team1_point(update: Update, context: CallbackContext) -> None:
    score["team1"] += 1
    await update.callback_query.edit_message_text(f"üèê –û—á–∫–æ –∫–æ–º–∞–Ω–¥–µ 1! –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: {score['team1']}:{score['team2']}")

async def team2_point(update: Update, context: CallbackContext) -> None:
    score["team2"] += 1
    await update.callback_query.edit_message_text(f"üèê –û—á–∫–æ –∫–æ–º–∞–Ω–¥–µ 2! –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: {score['team1']}:{score['team2']}")

async def get_score(update: Update, context: CallbackContext) -> None:
    await update.callback_query.edit_message_text(f"üèÜ –¢–µ–∫—É—â–∏–π —Å—á–µ—Ç: {score['team1']}:{score['team2']}")

if __name__ == '__main__':
    application = ApplicationBuilder().token("6990209707:AAGOaqjJNQ52a-D1nn5pwIl-j-4bzrRGxKI").build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("team1", team1_point))
    application.add_handler(CommandHandler("team2", team2_point))
    application.add_handler(CommandHandler("score", get_score))
    application.add_handler(CallbackQueryHandler(handle_button))

    application.run_polling()